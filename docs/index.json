[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/blip.mjs",
    "content": "import { InstanceMarker } from './instanceMarker.mjs';\r\nimport { Logger } from './vendor/logger.min.mjs';\r\nimport { Collector } from './vendor/collector.min.mjs';\r\n\r\nclass BlipManagerSingleton {\r\n    /**\r\n     * The size of the game\r\n     * @type {number}\r\n     */\r\n\tstatic GAME_SIZE = (() => {\r\n\t\tif (VYLO) {\r\n\t\t\tconst gameSize = VYLO.World.getGameSize();\r\n\t\t\treturn gameSize;\r\n\t\t}\r\n\t\treturn { 'width': 960, 'height': 540 };\r\n\t})();\r\n    /**\r\n     * The size of the game halfed\r\n     * @type {number}\r\n     */\r\n\tstatic GAME_SIZE_HALF = (() => {\r\n\t\treturn { 'width': BlipManagerSingleton.GAME_SIZE.width / 2, 'height': BlipManagerSingleton.GAME_SIZE.height / 2 };\r\n\t})();\r\n    /**\r\n     * The center of the screen's coordinates (in pixels)\r\n     * @type {number}\r\n     */\r\n    static CENTER_SCREEN_POSITION = (() => {\r\n        return { x: BlipManagerSingleton.GAME_SIZE.width / 2 , y: BlipManagerSingleton.GAME_SIZE.height / 2};\r\n\t})();\r\n    /**\r\n     * The default tile size. This is used a backup value when an icon's width/height is not accessible.\r\n     * @type {number}\r\n     */\r\n    static TILE_SIZE = 32;\r\n    /**\r\n     * The maximum number of blips that can exist on the screen at once\r\n     * @type {number}\r\n     */\r\n    static MAX_BLIPS = 200;\r\n    /**\r\n     * An array tracking all stored blips\r\n     * @type {Array}\r\n     */\r\n    static storedBlips = [];\r\n\t/**\r\n\t * Gets the angle between two points\r\n\t * \r\n\t * @param {Object} pStartPoint - The starting point\r\n\t * @param {Object} pEndPoint - The ending point\r\n     * @param {boolean} pCenter - Whether to get the angle from the center of the points\r\n\t * @returns {number} The angle between the starting point and the ending point\r\n\t */\r\n\tstatic getAngle(pStartPoint, pEndPoint, pCenter) {\r\n        let y;\r\n        let x;\r\n        if (pCenter) {\r\n            const iconWidth = pStartPoint.icon ? pStartPoint.icon.width : 32;\r\n            const iconHeight = pStartPoint.icon ? pStartPoint.icon.height : 32;\r\n            y = (pStartPoint.y + iconHeight / 2) - (pEndPoint.y + iconHeight / 2);\r\n            x = (pStartPoint.x + iconWidth / 2) - (pEndPoint.x + iconWidth / 2);\r\n        } else {\r\n            y = pStartPoint.y - pEndPoint.y;\r\n            x = pStartPoint.x - pEndPoint.x;\r\n        }\r\n\t\treturn -Math.atan2(y, x) - Math.PI;\r\n\t}\r\n    /**\r\n     * API to get distance between points\r\n     * @param {Object} pStartPoint - The starting point\r\n     * @param {Object} pEndPoint - The ending point\r\n     * @param {boolean} pCenter - Whether to get the distance from the center of the points\r\n     * @returns {number} The distance between the two points\r\n     */\r\n    static getDistance(pStartPoint, pEndPoint, pCenter) {\r\n        let y;\r\n        let x;\r\n        if (pCenter) {\r\n            const iconWidth = pStartPoint.icon ? pStartPoint.icon.width : 32;\r\n            const iconHeight = pStartPoint.icon ? pStartPoint.icon.height : 32;\r\n            y = (pStartPoint.y + iconHeight / 2) - (pEndPoint.y + iconHeight / 2);\r\n            x = (pStartPoint.x + iconWidth / 2) - (pEndPoint.x + iconWidth / 2);\r\n        } else {\r\n            y = (pStartPoint.y - pEndPoint.y);\r\n            x = (pStartPoint.x - pEndPoint.x);\r\n        }\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n    /**\r\n     * Gets the direction of the angle passed\r\n     * @param {number} pAngle - The angle in radians to convert into a cardinal direction\r\n     * @returns The direction of the angle\r\n     */\r\n    static getDirection(pAngle) {\r\n\t\tconst degree = Math.abs(Math.floor(((pAngle * (180 / Math.PI)) / 45) + 0.5));\r\n\t\tconst compassDirections = ['east', 'southeast', 'south', 'southwest', 'west', 'northwest', 'north', 'northeast'];\r\n\t\treturn compassDirections[(degree % 8)];\r\n\t}\r\n    /**\r\n     * Whether the manager is actively managing the state of blips\r\n     * @type {boolean}\r\n     */\r\n    paused = false;\r\n    /**\r\n     * An array tracking all active blips (hidden or not)\r\n     * @type {Array}\r\n     */\r\n    activeBlips = [];\r\n\r\n    constructor() {\r\n        this.interfaceHandle = (Math.random() * Math.PI / 2) + '-blip-interface';\r\n        // Create a logger\r\n        /** The logger module this module uses to log errors / logs\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this.logger = new Logger();\r\n        this.logger.registerType('BlipComponent-Module', this.logger.FG_MAGENTA);\r\n        this.logger.prefix('BlipComponent-Module').log(`✅@v${__VERSION__}`);\r\n        // Create the interface\r\n        VYLO.Client.createInterface(this.interfaceHandle);\r\n        // Show the interface\r\n        VYLO.Client.showInterface(this.interfaceHandle);\r\n        /**\r\n         * Update loop for this blip manager to manage blips\r\n         */\r\n        const self = this;\r\n        const update = function() {\r\n            self.manageBlips();\r\n            requestAnimationFrame(update);\r\n        }\r\n        requestAnimationFrame(update);\r\n    }\r\n    /**\r\n     * Tracks a blip within the activeBlips array\r\n     * @param {Object} pBlip - The blip to track\r\n     */\r\n    track(pBlip) {\r\n        if (!this.activeBlips.includes(pBlip)) {\r\n            this.activeBlips.push(pBlip);\r\n        }\r\n    }\r\n    /**\r\n     * Untracks a blip from the activeBlips array\r\n     * @param {Object} pBlip - The blip to untrack\r\n     */\r\n    untrack(pBlip) {\r\n        if (this.activeBlips.includes(pBlip)) {\r\n            this.activeBlips.splice(this.activeBlips.indexOf(pBlip), 1);\r\n        }\r\n    }\r\n    /**\r\n     * Pauses the blip manager from managing blips\r\n     */\r\n    pause() {\r\n        this.paused = true;\r\n    }\r\n    /**\r\n     * Resumes the blip manager to manage blips\r\n     */\r\n    resume() {\r\n        this.paused = false;\r\n    }\r\n    /**\r\n     * Method for updating the \"state\" of each blip\r\n     */\r\n    manageBlips() {\r\n        // Do not manage blips when paused.\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        for (const blip of this.activeBlips) {\r\n            const blipIconWidth = blip.icon ? blip.icon.width : 32;\r\n            const blipIconHeight = blip.icon ? blip.icon.height : 32;\r\n\r\n            const mapInstanceIconWidth = blip.mapInstance.icon ? blip.mapInstance.icon.width : 32;\r\n            const mapInstanceHeight = blip.mapInstance.icon ? blip.mapInstance.icon.height : 32;\r\n            blip.mapInstance.getScreenPos(blip.screenPos);\r\n            // Get the position the blip should be placed at\r\n            const x = VYLO.Math.clamp((blip.screenPos.x + scrM.xMapPos + (mapInstanceIconWidth / 2) - blipIconWidth / VYLO.Client.mapView.scale.x) * VYLO.Client.mapView.scale.x, -blipIconWidth + blip.settings.buffer, BlipManagerSingleton.GAME_SIZE.width - blipIconWidth - blip.settings.buffer);\r\n            const y = VYLO.Math.clamp((blip.screenPos.y + scrM.yMapPos + (mapInstanceHeight / 2) - blipIconHeight / 2 / VYLO.Client.mapView.scale.y) * VYLO.Client.mapView.scale.y, (-blipIconHeight / 2) + blip.settings.buffer, BlipManagerSingleton.GAME_SIZE.height - (blipIconHeight / 2) - blip.settings.buffer);\r\n            // Check distance between map instance and client mob\r\n            const distance = Math.round(BlipManagerSingleton.getDistance(VYLO.Client.mob, blip.mapInstance, true));\r\n            // Check angle from client mob to map instance\r\n            const angle = BlipManagerSingleton.getAngle(VYLO.Client.mob, blip.mapInstance, true);\r\n            // Check the direction of the angle\r\n            const direction = BlipManagerSingleton.getDirection(angle);      \r\n            // Whether the blip will be shown or not\r\n            let showBlip = false;\r\n            // Setting the angle of the blip\r\n            blip.angle = angle;\r\n            // Setting the blip to the proper coordinates\r\n            blip.setPos(x, y);\r\n\r\n            if (distance < blip.settings.maxDistance) {\r\n                const furtherThanHalfHorizontalScreenSize = distance >= (BlipManagerSingleton.GAME_SIZE_HALF.width - (mapInstanceIconWidth / 2)) / VYLO.Client.mapView.scale.x;\r\n                const furtherThanHalfVerticalScreenSize = distance >= (BlipManagerSingleton.GAME_SIZE_HALF.height - (mapInstanceHeight / 2)) / VYLO.Client.mapView.scale.y;\r\n                // Check the direction so we know whether to show the blip or not. Some directions make it so the formula changes on whether to show it or not\r\n                switch (direction) {\r\n                    case 'north':\r\n                    case 'south':\r\n                        if (furtherThanHalfVerticalScreenSize) {\r\n                            showBlip = true;\r\n                        }\r\n                        break;\r\n\r\n                    case 'east':\r\n                    case 'west':\r\n                        if (furtherThanHalfHorizontalScreenSize) {\r\n                            showBlip = true;\r\n                        }\r\n                        break;\r\n                    \r\n                    /**\r\n                     * @todo Fix issue where lower distance sometimes makes blip hide\r\n                     */\r\n                    case 'northwest':\r\n                    case 'northeast':\r\n                    case 'southwest':\r\n                    case 'southeast':\r\n                        if (furtherThanHalfHorizontalScreenSize || furtherThanHalfVerticalScreenSize) {\r\n                            showBlip = true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (showBlip) {\r\n                blip.show();\r\n            } else {\r\n                blip.hide();\r\n            }\r\n            /**\r\n             * @todo Handle the distance text being shown\r\n             */\r\n        }\r\n    }\r\n    /**\r\n     * Hides all blips\r\n     */\r\n    hideBlips() {\r\n        for (const blip of this.activeBlips) {\r\n            blip.hide();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// Create an instance of the blip manager \r\nconst BlipManager = new BlipManagerSingleton();\r\n\r\n/**\r\n* A Blip Component\r\n* @class BlipComponent\r\n* @license Blip is licensed under an MIT styled license.\r\n* @author https://github.com/doubleactii\r\n* Copyright (c) 2023 Evitca Studio\r\n*/\r\nexport class BlipComponent {\r\n    /**\r\n     * This is the static distance it will be from the side of the game window\r\n     * @type {number}\r\n     */\r\n    static BUFFER = 25;\r\n    /**\r\n     * This is the maximum distance at which the blip will be removed. (Distance from the center of the screen)\r\n     * @type {number}\r\n     */\r\n    static MAX_DIST = 1000;\r\n    /**\r\n     * This is the max plane/layer at which this blip will exist. This will overlay this blip icon over any other interface element\r\n     * @type {number}\r\n     */\r\n    static MAX_DISPLAY = 9999;\r\n    /**\r\n     * The blip instance that is created/recycled. This will be a Diob instance\r\n     * @type {Object}\r\n     */\r\n    instance = null;\r\n    /**\r\n     * @param {Object} pMapInstance - The instance this blip will represent\r\n     * @param {Object} pIconSettings - An object with settings holding the icon information for the blip\r\n     * @param {Object} pBlipSettings - AN object with settings on how the blip will behave\r\n     */\r\n    constructor(pMapInstance, pIconSettings = { 'atlasName': '', 'iconName': '' }, pBlipSettings = { 'buffer': BlipComponent.BUFFER, 'showsDistance': false, 'maxDistance': BlipComponent.MAX_DIST, 'alwaysOnTop': false }, pMarkerSettings) {\r\n       // Do not allow more than the max amount of blips to be created.\r\n        if (BlipManager.activeBlips.length >= BlipManagerSingleton.MAX_BLIPS) {\r\n            BlipManager.logger.prefix('BlipComponent-Module').log('Max blip limit reached');\r\n            return;\r\n        }\r\n\r\n        // Creating/Recyling the blip\r\n        const blip = Collector.isInCollection('Interface', 1, BlipManagerSingleton.storedBlips);\r\n        blip.touchOpacity = 0;\r\n        blip.mouseOpacity = 0;\r\n        blip.preventAutoScale = false;\r\n        blip.anchor.x = 1;\r\n        blip.anchor.y = 0.5;\r\n        // Assigning icon data to the blip\r\n        blip.atlasName = pIconSettings.atlasName;\r\n        blip.iconName = pIconSettings.iconName;\r\n        // Allow map instance to be referenced via the blip\r\n        blip.mapInstance = pMapInstance;\r\n        blip.screenPos = { x: 0, y: 0 };\r\n        blip.settings = {\r\n            // The padding between the blip and the screen\r\n            'buffer': pBlipSettings.buffer,\r\n            // Whether this blip will show its distance\r\n            'showsDistance': pBlipSettings.showsDistance,\r\n            // The max distance at which the map instance this blip represents can be from the center of the screen\r\n            'maxDistance': pBlipSettings.maxDistance\r\n        };\r\n        // Render above all others\r\n        if (pBlipSettings.alwaysOnTop) {\r\n            blip.plane = BlipComponent.MAX_DISPLAY;\r\n            blip.layer = BlipComponent.MAX_DISPLAY;\r\n        }\r\n        \r\n        // Shows a marker when the blip is hidden due to the map instance being ON SCREEN.\r\n        if (pMarkerSettings) {\r\n            /**\r\n             * @todo Create Instance Marker with settings.\r\n             * Remember the atlasName and iconName is inside of the marker settings\r\n             */\r\n        }\r\n        // Adding blip to interface to be shown\r\n        VYLO.Client.addInterfaceElement(blip, BlipManager.interfaceHandle, pMapInstance.id + '- blip');\r\n        blip.hide();\r\n        // Track the blip\r\n        BlipManager.track(blip);\r\n        // Add a reference to the blip\r\n        this.instance = blip;\r\n    }\r\n    /**\r\n     * Removes this blip\r\n     */\r\n    remove() {\r\n        // We check if there is an instance attached to this blip, because some blips can be created when the max blips already exist and they will be useless\r\n        if (this.instance) this.instance.hide();\r\n        BlipManager.untrack(this.instance);\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Blip/src/blip.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "BlipManagerSingleton",
    "memberof": "src/blip.mjs",
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton",
    "access": "public",
    "export": false,
    "importPath": "./src/blip.mjs",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "GAME_SIZE",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.GAME_SIZE",
    "access": "public",
    "description": "The size of the game",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "GAME_SIZE_HALF",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.GAME_SIZE_HALF",
    "access": "public",
    "description": "The size of the game halfed",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "CENTER_SCREEN_POSITION",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.CENTER_SCREEN_POSITION",
    "access": "public",
    "description": "The center of the screen's coordinates (in pixels)",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "TILE_SIZE",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.TILE_SIZE",
    "access": "public",
    "description": "The default tile size. This is used a backup value when an icon's width/height is not accessible.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "MAX_BLIPS",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.MAX_BLIPS",
    "access": "public",
    "description": "The maximum number of blips that can exist on the screen at once",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "storedBlips",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.storedBlips",
    "access": "public",
    "description": "An array tracking all stored blips",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "getAngle",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.getAngle",
    "access": "public",
    "description": "Gets the angle between two points",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle between the starting point and the ending point"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartPoint",
        "description": "The starting point"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndPoint",
        "description": "The ending point"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pCenter",
        "description": "Whether to get the angle from the center of the points"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle between the starting point and the ending point"
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "getDistance",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.getDistance",
    "access": "public",
    "description": "API to get distance between points",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The distance between the two points"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartPoint",
        "description": "The starting point"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndPoint",
        "description": "The ending point"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pCenter",
        "description": "Whether to get the distance from the center of the points"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The distance between the two points"
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "getDirection",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/blip.mjs~BlipManagerSingleton.getDirection",
    "access": "public",
    "description": "Gets the direction of the angle passed",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The direction of the angle"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAngle",
        "description": "The angle in radians to convert into a cardinal direction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The direction of the angle"
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "paused",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#paused",
    "access": "public",
    "description": "Whether the manager is actively managing the state of blips",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "activeBlips",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#activeBlips",
    "access": "public",
    "description": "An array tracking all active blips (hidden or not)",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "interfaceHandle",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#interfaceHandle",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "logger",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#logger",
    "access": "private",
    "description": "The logger module this module uses to log errors / logs",
    "lineNumber": 117,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "track",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#track",
    "access": "public",
    "description": "Tracks a blip within the activeBlips array",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pBlip",
        "description": "The blip to track"
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "untrack",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#untrack",
    "access": "public",
    "description": "Untracks a blip from the activeBlips array",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pBlip",
        "description": "The blip to untrack"
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "pause",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#pause",
    "access": "public",
    "description": "Pauses the blip manager from managing blips",
    "lineNumber": 155,
    "params": [],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "resume",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#resume",
    "access": "public",
    "description": "Resumes the blip manager to manage blips",
    "lineNumber": 161,
    "params": [],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "manageBlips",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#manageBlips",
    "access": "public",
    "description": "Method for updating the \"state\" of each blip",
    "lineNumber": 167,
    "params": [],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "hideBlips",
    "memberof": "src/blip.mjs~BlipManagerSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipManagerSingleton#hideBlips",
    "access": "public",
    "description": "Hides all blips",
    "lineNumber": 241,
    "params": [],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "BlipManager",
    "memberof": "src/blip.mjs",
    "static": true,
    "longname": "src/blip.mjs~BlipManager",
    "access": "public",
    "export": false,
    "importPath": "./src/blip.mjs",
    "importStyle": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "type": {
      "types": [
        "src/blip.mjs~BlipManagerSingleton"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "BlipComponent",
    "memberof": "src/blip.mjs",
    "static": true,
    "longname": "src/blip.mjs~BlipComponent",
    "access": "public",
    "export": true,
    "importPath": "./src/blip.mjs",
    "importStyle": "{BlipComponent}",
    "description": "A Blip Component",
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BlipComponent"
      },
      {
        "tagName": "@license",
        "tagValue": "Blip is licensed under an MIT styled license."
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii\nCopyright (c) 2023 Evitca Studio"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "BUFFER",
    "memberof": "src/blip.mjs~BlipComponent",
    "static": true,
    "longname": "src/blip.mjs~BlipComponent.BUFFER",
    "access": "public",
    "description": "This is the static distance it will be from the side of the game window",
    "lineNumber": 264,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "MAX_DIST",
    "memberof": "src/blip.mjs~BlipComponent",
    "static": true,
    "longname": "src/blip.mjs~BlipComponent.MAX_DIST",
    "access": "public",
    "description": "This is the maximum distance at which the blip will be removed. (Distance from the center of the screen)",
    "lineNumber": 269,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "MAX_DISPLAY",
    "memberof": "src/blip.mjs~BlipComponent",
    "static": true,
    "longname": "src/blip.mjs~BlipComponent.MAX_DISPLAY",
    "access": "public",
    "description": "This is the max plane/layer at which this blip will exist. This will overlay this blip icon over any other interface element",
    "lineNumber": 274,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "instance",
    "memberof": "src/blip.mjs~BlipComponent",
    "static": false,
    "longname": "src/blip.mjs~BlipComponent#instance",
    "access": "public",
    "description": "The blip instance that is created/recycled. This will be a Diob instance",
    "lineNumber": 279,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/blip.mjs~BlipComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 285,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pMapInstance",
        "description": "The instance this blip will represent"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pIconSettings",
        "description": "An object with settings holding the icon information for the blip"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pBlipSettings",
        "description": "AN object with settings on how the blip will behave"
      }
    ]
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "remove",
    "memberof": "src/blip.mjs~BlipComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/blip.mjs~BlipComponent#remove",
    "access": "public",
    "description": "Removes this blip",
    "lineNumber": 337,
    "params": [],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/instanceMarker.mjs",
    "content": "export class InstanceMarker {\r\n    /**\r\n     * This is distance at which the marker is removed from the screen. (Distance from the center of the screen)\r\n     */\r\n    static REMOVAL_DISTANCE = 50;\r\n    \r\n    constructor(pMapInstance, pIconSettings = { 'atlasName': '', 'iconName': '' }, pMarkerSettings = { 'showsDistance': false, 'removalDistance': InstanceMarker.REMOVAL_DISTANCE }) {\r\n\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Blip/src/instanceMarker.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "InstanceMarker",
    "memberof": "src/instanceMarker.mjs",
    "static": true,
    "longname": "src/instanceMarker.mjs~InstanceMarker",
    "access": "public",
    "export": true,
    "importPath": "./src/instanceMarker.mjs",
    "importStyle": "{InstanceMarker}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "REMOVAL_DISTANCE",
    "memberof": "src/instanceMarker.mjs~InstanceMarker",
    "static": true,
    "longname": "src/instanceMarker.mjs~InstanceMarker.REMOVAL_DISTANCE",
    "access": "public",
    "description": "This is distance at which the marker is removed from the screen. (Distance from the center of the screen)",
    "lineNumber": 5,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/instanceMarker.mjs~InstanceMarker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/instanceMarker.mjs~InstanceMarker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "kind": "index",
    "content": "# Blip\r\nA plugin that will allow a blip representation of an instance that is offscreen to be shown and much more with customizable settings!\r\n",
    "longname": "C:\\Users\\jared\\Documents\\Github\\Blip\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"version\": \"1.0.0\",\r\n  \"dependencies\": {\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"uglify-js\": \"^3.17.4\",\r\n    \"webpack\": \"^5.89.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n    \"build-dist\": \"npx webpack && uglifyjs dist/blip.min.mjs -m -c --comments -o dist/blip.min.mjs && esdoc -c esdoc.json\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"webpack-cli\": \"^5.1.4\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\jared\\Documents\\Github\\Blip\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]