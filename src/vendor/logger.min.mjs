/** 
 * @file A small library to class up log messages.
 * 
 * @version 1.0.0
 * @author https://github.com/doubleactii
 * @copyright Copyright (c) 2022 Evitca Studio
 * @license Logger does not have a license at this time. For licensing contact the author
 */
class Logger{constructor(s){this.RESET="[0m",this.BRIGHT="[1m",this.DIM="[2m",this.UNDERSCORE="[4m",this.BLINK="[5m",this.REVERSE="[7m",this.HIDDEN="[8m",this.FG_BLACK="[30m",this.FG_RED="[31m",this.FG_GREEN="[32m",this.FG_YELLOW="[33m",this.FG_BLUE="[34m",this.FG_MAGENTA="[35m",this.FG_CYAN="[36m",this.FG_WHITE="[37m",this.FG_GRAY="[90m",this.BG_BLACK="[40m",this.BG_RED="[41m",this.BG_GREEN="[42m",this.BG_YELLOW="[43m",this.BG_BLUE="[44m",this.BG_MAGENTA="[45m",this.BG_CYAN="[46m",this.BG_WHITE="[47m",this.BG_GRAY="[100m",this.TYPE_SPACER_LENGTH=13,this.types={default:this.FG_WHITE},this.currentType="",this.SPACE_CHAR=" ",this.FG_COLORS={};for(let s=0;s<=255;s++)this.FG_COLORS[s]="[38;5;"+s+"m";this.BG_COLORS={};for(let s=0;s<=255;s++)this.BG_COLORS[s]="[48;5;"+s+"m";Array.isArray(s)&&this.registerTypes(s)}prefix(s){return"string"==typeof s&&(this.currentType=s),this}message(s="log",...t){var e,i,h,r=this.currentType||"";0===r.length?console[s](...t):(e=r.length>=this.TYPE_SPACER_LENGTH,h=(i=this.types[r.toLowerCase()]?this.types[r.toLowerCase()]:this.types.default).includes(""),!globalThis.window||h?console[s](i+r+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-r.length,e?1:0))+"|"+this.RESET,...t):console[s]("%c"+r+this.SPACE_CHAR.repeat(Math.max(this.TYPE_SPACER_LENGTH-r.length,e?1:0))+"|",i,...t)),this.currentType=""}log(...s){this.message("log",...s)}info(...s){this.message("info",...s)}error(...s){this.message("error",...s)}warn(...s){this.message("warn",...s)}assert(...s){console.assert(...s)}debug(...s){this.message("debug",...s)}count(s){console.count(s)}countReset(s){console.countReset(s)}table(s,t){console.table(s,t)}time(s){this.message("time",s)}timeLog(s){this.message("timeLog",s)}timeEnd(s){this.message("timeEnd",s)}trace(...s){this.message("trace",...s)}group(s){this.message("group",s)}groupCollapsed(s){console.groupCollapsed(s)}groupEnd(){console.groupEnd()}clear(){console.clear()}registerType(s,t){this.types[s]||"string"==typeof s&&"string"==typeof t&&(this.types[s.toLowerCase()]=t)}registerTypes(t){if(Array.isArray(t))for(let s=0;s<t.length;s++)this.registerType(t[s].type,t[s].ansi)}unregisterType(s){this.types[s]&&delete this.types[s]}}export{Logger};